/* CSS Custom Properties for theming */
:root {
  /* Light theme (default) */
  --cluster-shadow-light: 0 2px 12px rgba(0, 0, 0, 0.2);
  --cluster-shadow-hover: 0 4px 16px rgba(0, 0, 0, 0.3);
  --cluster-border-solid: rgba(255, 255, 255, 0.95);
  --cluster-border-dashed: rgba(255, 255, 255, 0.8);
  --cluster-border-dotted: rgba(255, 255, 255, 0.6);
  --cluster-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --cluster-tooltip-bg: rgba(0, 0, 0, 1);
  --cluster-tooltip-text: white;
  --cluster-badge-bg: rgba(0, 0, 0, 0.8);
  --cluster-badge-text: white;
}

/* Dark theme support */
@media (prefers-color-scheme: dark) {
  :root {
    --cluster-shadow-light: 0 2px 12px rgba(0, 0, 0, 0.4);
    --cluster-shadow-hover: 0 4px 16px rgba(0, 0, 0, 0.6);
    --cluster-border-solid: rgba(255, 255, 255, 0.9);
    --cluster-border-dashed: rgba(255, 255, 255, 0.7);
    --cluster-border-dotted: rgba(255, 255, 255, 0.5);
    --cluster-tooltip-bg: rgba(0, 0, 0, 1);
    --cluster-tooltip-text: white;
    --cluster-badge-bg: rgba(255, 255, 255, 0.9);
    --cluster-badge-text: #1a1a1a;
  }
}

/* Manual dark theme class for explicit control */
.darkTheme {
  --cluster-shadow-light: 0 2px 12px rgba(0, 0, 0, 0.4);
  --cluster-shadow-hover: 0 4px 16px rgba(0, 0, 0, 0.6);
  --cluster-border-solid: rgba(255, 255, 255, 0.9);
  --cluster-border-dashed: rgba(255, 255, 255, 0.7);
  --cluster-border-dotted: rgba(255, 255, 255, 0.5);
  --cluster-tooltip-bg: rgba(0, 0, 0, 1);
  --cluster-tooltip-text: white;
  --cluster-badge-bg: rgba(255, 255, 255, 0.9);
  --cluster-badge-text: #1a1a1a;
}

/* Leaflet marker container */
.clusterMarker {
  background: transparent !important;
  border: none !important;
}

/* Base cluster styles */
.cluster {
  position: relative;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: var(--cluster-transition);
  box-shadow: var(--cluster-shadow-light);
  border: 3px solid var(--cluster-border-solid);
  
  /* Add entrance animation */
  animation: clusterFadeIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  
  /* Ensure crisp rendering - use initial transform for GPU layer */
  transform: scale(1);
  transform-origin: center;
  backface-visibility: hidden;
}

/* Keyframes for animations */
@keyframes clusterFadeIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulseGlow {
  0%, 100% {
    box-shadow: var(--cluster-shadow-light);
  }
  50% {
    box-shadow: var(--cluster-shadow-hover);
  }
}

/* Confidence indicators through border styles */
.cluster[style*="border-style: solid"] {
  border-color: var(--cluster-border-solid);
}

.cluster[style*="border-style: dashed"] {
  border-color: var(--cluster-border-dashed);
  border-width: 2px;
}

.cluster[style*="border-style: dotted"] {
  border-color: var(--cluster-border-dotted);
  border-width: 2px;
}

/* Enhanced hover and focus states */
.cluster:hover {
  transform: scale(1.1);
  box-shadow: var(--cluster-shadow-hover);
  /* Stop all other animations on hover */
  animation: none;
}

.cluster:focus-visible {
  outline: 2px solid #007acc;
  outline-offset: 2px;
  /* Ensure focus is visible above everything */
  z-index: 1000;
}

/* Add subtle pulse animation for high confidence clusters - disabled on hover */
.cluster[style*="border-style: solid"]:not(:hover):not(:focus) {
  animation: pulseGlow 3s ease-in-out infinite;
}

/* Enhanced tooltip styling */
.cluster[data-tooltip] {
  position: relative;
}

/* Custom tooltip - sleek modern design */
.cluster::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-8px);
  background: var(--cluster-tooltip-bg);
  backdrop-filter: blur(8px);
  color: var(--cluster-tooltip-text);
  padding: 6px 10px;
  border-radius: 6px;
  font-size: 11px;
  font-weight: 500;
  line-height: 1.3;
  white-space: pre-line;
  text-align: left;
  min-width: max-content;
  max-width: 200px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1000;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.cluster:hover::after {
  opacity: 1;
  transform: translateX(-50%) translateY(-12px);
}

/* Tooltip arrow - using a more specific pseudo-element approach */
.cluster[data-tooltip]::before {
  content: '';
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(0px);
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid var(--cluster-tooltip-bg);
  opacity: 0;
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1001;
}

.cluster[data-tooltip]:hover::before {
  opacity: 1;
  transform: translateX(-50%) translateY(-2px);
}

/* Size variants */
.small {
  width: 32px;
  height: 32px;
}

.medium {
  width: 44px;
  height: 44px;
}

.large {
  width: 56px;
  height: 56px;
}

/* Count text for mixed clusters */
.count {
  color: white;
  font-weight: bold;
  font-size: 12px;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  position: relative;
  z-index: 2;
  /* Ensure stable positioning */
  transform: translateZ(0);
  backface-visibility: hidden;
}

.medium .count {
  font-size: 14px;
}

.large .count {
  font-size: 16px;
}

/* Emoji-based homogeneous clusters */
.emoji {
  position: relative;
  justify-content: center;
  align-items: center;
}

.emojiMain {
  font-size: 16px;
  line-height: 1;
  position: relative;
  z-index: 2;
  /* Ensure stable positioning and smooth animation */
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: transform 0.2s ease;
}

/* Remove conflicting scale - replaced by wiggle animation below */

.small .emojiMain {
  font-size: 12px;
}

.medium .emojiMain {
  font-size: 18px;
}

.large .emojiMain {
  font-size: 22px;
}

/* Count badge for emoji clusters */
.countBadge {
  position: absolute;
  bottom: -4px;
  right: -4px;
  background: var(--cluster-badge-bg);
  color: var(--cluster-badge-text);
  font-size: 10px;
  font-weight: bold;
  border-radius: 8px;
  min-width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 4px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  z-index: 3;
  
  /* Ensure stable positioning */
  transform: translateZ(0);
  backface-visibility: hidden;
  
  /* Add badge entrance animation */
  animation: badgePop 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.2s both;
}

@keyframes badgePop {
  0% {
    opacity: 0;
    transform: scale(0);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.medium .countBadge {
  font-size: 11px;
  min-width: 18px;
  height: 18px;
  bottom: -5px;
  right: -5px;
}

.large .countBadge {
  font-size: 12px;
  min-width: 20px;
  height: 20px;
  bottom: -6px;
  right: -6px;
}

/* Mixed cluster styling - uses base .cluster styles */

/* ===== RESPONSIVE DESIGN ENHANCEMENTS ===== */

/* Mobile-first responsive breakpoints */
@media (max-width: 768px) {
  .cluster {
    /* Larger touch targets for mobile */
    min-width: 36px;
    min-height: 36px;
    
    /* Reduced animations for better mobile performance */
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  /* Use :active instead of :hover on mobile for better touch experience */
  .cluster:active {
    transform: scale(1.05);
    box-shadow: var(--cluster-shadow-hover);
  }
  
  /* Disable hover effects on touch devices */
  @media (hover: none) {
    .cluster:hover {
      transform: scale(1);
      box-shadow: var(--cluster-shadow-light);
      animation: inherit;
    }
  }
  
  .cluster::after {
    /* Better mobile tooltip positioning */
    font-size: 12px;
    max-width: 150px;
    padding: 8px 12px;
  }
  
  /* Larger size variants for mobile */
  .small {
    width: 36px;
    height: 36px;
  }
  
  .medium {
    width: 48px;
    height: 48px;
  }
  
  .large {
    width: 60px;
    height: 60px;
  }
}

/* High-DPI display optimizations */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
  .cluster {
    /* Crisp rendering on retina displays */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  .emojiMain {
    /* Better emoji rendering on high-DPI */
    text-rendering: optimizeLegibility;
  }
}

/* ===== ACCESSIBILITY ENHANCEMENTS ===== */

/* Reduced motion accessibility */
@media (prefers-reduced-motion: reduce) {
  .cluster {
    animation: none;
    transition: none;
  }
  
  .cluster:hover {
    transform: none;
  }
  
  .countBadge {
    animation: none;
  }
  
  .cluster[style*="border-style: solid"]:not(:hover) {
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .cluster {
    border-width: 4px;
    box-shadow: 0 0 0 2px currentColor;
  }
  
  .cluster::after {
    border: 2px solid currentColor;
    background: ButtonFace;
    color: ButtonText;
  }
  
  .countBadge {
    border: 1px solid currentColor;
    background: ButtonText;
    color: ButtonFace;
  }
}

/* Focus management for keyboard users */
.cluster {
  /* Make clusters focusable */
  cursor: pointer;
  position: relative;
}

.cluster:focus {
  outline: 2px solid #005fcc;
  outline-offset: 2px;
  z-index: 100;
}

.cluster:focus:not(:focus-visible) {
  outline: none;
}

.cluster:focus-visible {
  outline: 2px solid #005fcc;
  outline-offset: 2px;
  z-index: 100;
}

/* Screen reader improvements */
.cluster[aria-label]::after {
  /* Hide tooltip from screen readers when aria-label is present */
  content: none;
}

/* Better color contrast for text */
.count {
  /* Ensure text meets WCAG AA contrast requirements */
  text-shadow: 
    0 1px 2px rgba(0, 0, 0, 0.8),
    0 0 1px rgba(0, 0, 0, 0.8);
}

/* ===== PERFORMANCE OPTIMIZATIONS ===== */

/* Performance optimizations */
.cluster {
  /* Contain layout shifts */
  contain: layout style;
  /* Optimize for animations */
  will-change: transform, box-shadow;
}

.cluster:hover {
  /* Ensure hover transform works properly */
  will-change: transform, box-shadow;
}

.countBadge {
  /* Optimize badge animations - only transform, not opacity */
  will-change: transform;
  /* Ensure stable rendering */
  transform: translateZ(0);
}

/* ===== ADVANCED FEATURES ===== */

/* Pulse intensity based on cluster size - only when not interacting */
.cluster[data-cluster-count^="1"]:not(:hover):not(:focus):not(:active) {
  /* Small clusters pulse gently */
  animation: pulseGlow 4s ease-in-out infinite;
}

.cluster[data-cluster-count^="2"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="3"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="4"]:not(:hover):not(:focus):not(:active) {
  /* Small clusters pulse gently */
  animation: pulseGlow 4s ease-in-out infinite;
}

.cluster[data-cluster-count^="5"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="6"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="7"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="8"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count^="9"]:not(:hover):not(:focus):not(:active) {
  /* Medium clusters pulse moderately */
  animation: pulseGlow 3s ease-in-out infinite;
}

.cluster[data-cluster-count~="10"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count~="11"]:not(:hover):not(:focus):not(:active),
.cluster[data-cluster-count~="12"]:not(:hover):not(:focus):not(:active) {
  /* Large clusters pulse more frequently */
  animation: pulseGlow 2.5s ease-in-out infinite;
}

/* Mood-specific enhancements */
.cluster[data-mood="energetic"]:hover {
  /* Energetic clusters get extra bounce on hover */
  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  transform: scale(1.15);
}

.cluster[data-mood="peaceful"]:hover {
  /* Peaceful clusters have slower, smoother hover */
  transition: all 0.5s ease-in-out;
  transform: scale(1.05);
}

.cluster[data-mood="party"]:not(:hover) .emojiMain {
  /* Party emojis get extra animation when not hovered */
  animation: partyBounce 2s ease-in-out infinite;
}

@keyframes partyBounce {
  0%, 50%, 100% { transform: scale(1); }
  25% { transform: scale(1.1) rotate(5deg); }
  75% { transform: scale(1.1) rotate(-5deg); }
}

/* ===== INTERACTION STATES ===== */

/* Loading states for dynamic content */
.loading {
  opacity: 0.6;
  animation: loadingPulse 1.5s ease-in-out infinite;
  pointer-events: none;
}

@keyframes loadingPulse {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 0.3; }
}

/* Selected state */
.selected {
  transform: scale(1.05);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
  border-color: #3b82f6;
  z-index: 10;
}

.selected:hover {
  transform: scale(1.15);
}

/* Pressed state (for keyboard/touch feedback) */
.pressed {
  transform: scale(0.95);
  box-shadow: var(--cluster-shadow-light);
}

/* Error states */
.error {
  border-color: #ff6b6b;
  animation: errorShake 0.5s ease-in-out;
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

/* Screen reader only content */
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus indicators that work with all states */
.cluster:focus-visible {
  outline: 2px solid #005fcc;
  outline-offset: 2px;
  z-index: 1000;
}

.cluster:focus-visible.selected {
  outline-color: #3b82f6;
  outline-width: 3px;
}

/* ===== MICRO-INTERACTIONS & ADVANCED ANIMATIONS ===== */

/* Cluster entrance with stagger effect */
@keyframes clusterEntranceStagger {
  0% {
    opacity: 0;
    transform: scale(0.3) rotate(-180deg);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.1) rotate(-90deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

/* Activity indicator - subtle breathing effect for active clusters */
.cluster[data-cluster-count^="1"][data-mood="energetic"],
.cluster[data-cluster-count^="2"][data-mood="energetic"] {
  animation: energeticBreath 2s ease-in-out infinite alternate;
}

@keyframes energeticBreath {
  0% { box-shadow: var(--cluster-shadow-light); }
  100% { box-shadow: 0 2px 16px rgba(255, 193, 7, 0.3), var(--cluster-shadow-light); }
}

/* Cluster interaction ripple effect - using box-shadow instead of pseudo-element */
.cluster:active {
  box-shadow: 
    var(--cluster-shadow-light),
    0 0 0 20px rgba(255, 255, 255, 0.3),
    0 0 0 40px rgba(255, 255, 255, 0.1);
  transition: box-shadow 0.1s ease;
}

/* Magnetic hover effect - slight movement towards cursor */
.cluster:hover {
  transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Count badge subtle highlight on parent hover - no separate hover */
.cluster:hover .countBadge {
  transform: scale(1.05);
  transition: transform 0.2s ease;
}

/* Remove the separate badge bounce to prevent conflicts */

/* Emoji wiggle on hover */
.cluster:hover .emojiMain {
  animation: emojiWiggle 0.5s ease-in-out;
}

@keyframes emojiWiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(5deg); }
  75% { transform: rotate(-5deg); }
}

/* Progress indicator for loading clusters - only for loading state */
.cluster.loading::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border-radius: inherit;
  background: conic-gradient(from 0deg, #3b82f6, #8b5cf6, #f59e0b, #3b82f6);
  animation: loadingRotate 2s linear infinite;
  z-index: -1;
}

@keyframes loadingRotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Mood confidence visualization - use box-shadow instead of pseudo-element */
.cluster[style*="border-style: solid"]:not(.loading):not(:hover) {
  box-shadow: 
    var(--cluster-shadow-light),
    0 0 0 1px rgba(59, 130, 246, 0.2),
    inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  animation: confidenceGlowShadow 3s ease-in-out infinite;
}

@keyframes confidenceGlowShadow {
  0%, 100% { 
    box-shadow: 
      var(--cluster-shadow-light),
      0 0 0 1px rgba(59, 130, 246, 0.2),
      inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  50% { 
    box-shadow: 
      var(--cluster-shadow-hover),
      0 0 0 2px rgba(59, 130, 246, 0.4),
      inset 0 0 0 1px rgba(255, 255, 255, 0.2);
  }
}

@keyframes confidenceGlow {
  0%, 100% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 0.6; transform: scale(1.02); }
}

/* ===== HEALTH INDICATORS & VISUAL FEEDBACK ===== */

/* Cluster activity level indicators */
.cluster[data-cluster-count="1"] {
  /* Single item clusters get subtle indicator */
  position: relative;
}

.cluster[data-cluster-count="1"]::after {
  content: '•';
  position: absolute;
  top: -8px;
  right: -8px;
  width: 6px;
  height: 6px;
  background: #10b981;
  border-radius: 50%;
  font-size: 0;
  opacity: 0.7;
}

/* High activity clusters (10+) get activity rings */
.cluster[data-cluster-count^="1"][data-cluster-count$="0"],
.cluster[data-cluster-count^="1"][data-cluster-count$="1"],
.cluster[data-cluster-count^="1"][data-cluster-count$="2"],
.cluster[data-cluster-count^="1"][data-cluster-count$="3"],
.cluster[data-cluster-count^="1"][data-cluster-count$="4"],
.cluster[data-cluster-count^="1"][data-cluster-count$="5"] {
  position: relative;
}

.cluster[data-cluster-count^="1"][data-cluster-count$="0"]::before,
.cluster[data-cluster-count^="1"][data-cluster-count$="1"]::before,
.cluster[data-cluster-count^="1"][data-cluster-count$="2"]::before,
.cluster[data-cluster-count^="1"][data-cluster-count$="3"]::before,
.cluster[data-cluster-count^="1"][data-cluster-count$="4"]::before,
.cluster[data-cluster-count^="1"][data-cluster-count$="5"]::before {
  content: '';
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  border: 2px solid rgba(59, 130, 246, 0.4);
  border-radius: 50%;
  animation: activityPulse 2s ease-in-out infinite;
}

@keyframes activityPulse {
  0%, 100% { 
    transform: scale(1); 
    opacity: 0.4; 
  }
  50% { 
    transform: scale(1.1); 
    opacity: 0.8; 
  }
}

/* Mood health indicators */
.cluster[data-mood="peaceful"] {
  box-shadow: 0 2px 12px rgba(16, 185, 129, 0.3);
}

.cluster[data-mood="energetic"] {
  box-shadow: 0 2px 12px rgba(245, 158, 11, 0.3);
}

.cluster[data-mood="creative"] {
  box-shadow: 0 2px 12px rgba(139, 92, 246, 0.3);
}

.cluster[data-mood="romantic"] {
  box-shadow: 0 2px 12px rgba(236, 72, 153, 0.3);
}

/* Confidence level visual feedback */
.cluster[style*="opacity: 1"] {
  /* High confidence clusters */
  border-width: 3px;
}

.cluster[style*="opacity: 0.9"] {
  /* Medium confidence clusters */
  border-width: 2px;
}

.cluster[style*="opacity: 0.8"], 
.cluster[style*="opacity: 0.7"] {
  /* Low confidence clusters */
  border-width: 1px;
  filter: saturate(0.8);
}

/* Cluster size visual hierarchy */
.large {
  /* Large clusters get prominence boost */
  z-index: 5;
}

.medium {
  z-index: 3;
}

.small {
  z-index: 1;
}

/* Success/completion feedback */
.cluster.success {
  border-color: #10b981;
  animation: successPulse 0.6s ease;
}

@keyframes successPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(16, 185, 129, 0.3); }
  100% { transform: scale(1); }
}

/* Warning indicators for unusual clusters */
.cluster[data-cluster-count^="5"]:not([data-mood]),
.cluster[data-cluster-count^="6"]:not([data-mood]),
.cluster[data-cluster-count^="7"]:not([data-mood]),
.cluster[data-cluster-count^="8"]:not([data-mood]),
.cluster[data-cluster-count^="9"]:not([data-mood]) {
  /* Large clusters with no dominant mood get warning indicator */
  position: relative;
}

.cluster[data-cluster-count^="5"]:not([data-mood])::after,
.cluster[data-cluster-count^="6"]:not([data-mood])::after,
.cluster[data-cluster-count^="7"]:not([data-mood])::after,
.cluster[data-cluster-count^="8"]:not([data-mood])::after,
.cluster[data-cluster-count^="9"]:not([data-mood])::after {
  content: '⚠';
  position: absolute;
  top: -6px;
  right: -6px;
  font-size: 12px;
  color: #f59e0b;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  z-index: 10;
}

